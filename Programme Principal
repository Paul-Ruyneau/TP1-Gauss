import random
import numpy as np
import TP1
import matplotlib.pyplot as plt

p = 10
matrice = TP1.creer_matrice(p)
matrice_colonne = TP1.creer_matrice_colonne(p)

print("\nMéthode de Gauss")
solution1 = TP1.Gauss(matrice, matrice_colonne)
print("Solution de AX = B avec Gauss :", solution1)
print("\nDécomposition LU")
solution2 = TP1.Decomposition(matrice, matrice_colonne)
print("Solution de AX = B avec la décomposition LU :", solution2)
print("\nMéthode du pivot partiel")
solution3 = TP1.GaussChoixPivotPartiel(matrice, matrice_colonne)
print("Solution de AX = B avec le pivot partiel :", solution3)
print("\nMéthode du pivot total")
solution4 = TP1.GaussChoixPivotTotal(matrice, matrice_colonne)
print("Solution de AX = B avec le pivot total :", solution4)

n = 1000
# TEMPS
x, y, y1, y2, y3, y4 = TP1.mesure_temps(n)
# on trace t = f(n)
plt.grid(True, which='both')
plt.plot(x, y1, label="Gauss", color="red")
plt.plot(x, y2, label="décomposition LU", color="blue")
plt.plot(x, y3, label="pivot partiel", color="yellow")
plt.plot(x, y4, label="pivot total", color="grey")
plt.plot(x, y, label="Fonction linalg", color="green")
# légendes et titre
plt.title("Temps de résolution en fonction de la taille de la matrice")
plt.xlabel("n, taille de la matrice")
plt.ylabel("temps en s")
plt.legend()
plt.show()

# ERREUR
x, y1, y2, y3, y4 = TP1.calcul_erreur(n)
# on trace err = f(n) avec ou sans échelle semilog
plt.plot(x, y1, label="Gauss", color="red")
plt.plot(x, y2, label="décomposition LU", color="blue")
plt.plot(x, y3, label="pivot partiel", color="yellow")
plt.plot(x, y4, label="pivot total", color="grey")
# légendes et titre
plt.title("Erreur en fonction de la taille de la matrice")
plt.xlabel("n, taille de la matrice")
plt.ylabel("erreur")
plt.legend()
plt.show()
